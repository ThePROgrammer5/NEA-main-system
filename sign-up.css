 
body {font-family: Arial;}

/* Style the tab */
.tab {
  overflow: hidden;
  border: 1px solid #ccc;
  background-color: #f1f1f1;
}

/* Style the buttons inside the tab */
.tab button {
  background-color: inherit;
  float: left;
  border: none;
  outline: none;
  cursor: pointer;
  padding: 14px 16px;
  transition: 0.3s;
  font-size: 20px;
}

/* Change background color of buttons on hover */
.tab button:hover {
  background-color: rgb(78, 78, 78);
}

/* Create an active/current tablink class */
.tab button.active {
  background-color: black;
  color: white;
}

/* Style the tab content */
.tabcontent {
  display: none;
  padding: 6px 12px;
  border: 1px solid #ccc;
  border-top: none;
}

.loader {
   position: fixed;
   top: 0;
   left: 0;
   width: 100vw;
   height: 100vh;
   display: flex;
   align-items: center;
   justify-content: center;
   background: #333333;
   transition: opacity 0.75s, visibility 0.75s;
 }
 
 .loader--hidden {
   opacity: 0;
   visibility: hidden;
 }
 
 .loader::after {
   cursor: wait;
   content: "";
   width: 75px;
   height: 75px;
   border: 15px solid #dddddd;
   border-top-color: black;
   border-radius: 50%;
   animation: loading 0.75s ease infinite;
 }
 
 @keyframes loading {
   from {
     transform: rotate(0turn);
   }
   to {
     transform: rotate(1turn);
   }
 }
 
 #loading-text {
   z-index: 3;
 }

* {
    background-color: black;
 }
 .text {
    width: 500px;
    height: 50px;
    border-color: White;
    caret-color: White;
    color: White;
    font-size: 40px;
    text-align: center;
 }

#agentIdText {
  border: 3px solid white;
}

body {
  background-color: black;
}

.text {
  text-shadow: 5px 5px #2b282880, 0 0 1rem #2b282880;
 }

 .form {
    display: block;
    text-align: center;
 }
 /* The container */
 .container {
  display: block;
  position: relative;
  padding-left: 35px;
  margin-bottom: 12px;
  cursor: pointer;
  font-size: 22px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  color: White;
 }
 .hoverEffect:hover {
  background-color: #333333;
 }
 /* Hide the browser's default radio button */
 .container input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
 }
 /* Create a custom radio button */
 .checkmark {
  position: absolute;
  top: 0;
  left: 0;
  height: 25px;
  width: 25px;
  background-color: #ccc;
  border-radius: 50%;
 }
 /* On mouse-over, add a grey background color */
 .container:hover input ~ .checkmark {
  background-color: #454540;
 }
 /* When the radio button is checked, add a gray background */
 .container input:checked ~ .checkmark {
  background-color: White;
 }
 /* Create the indicator (the dot/circle - hidden when not checked) */
 .checkmark:after {
  content: "";
  position: absolute;
  display: none;
 }
 /* Show the indicator (dot/circle) when checked */
 .container input:checked ~ .checkmark:after {
  display: block;
 }
 /* Style the indicator (dot/circle) */
 .container .checkmark:after {
     top: 9px;
    left: 9px;
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background: black;
 }
 